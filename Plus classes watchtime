
select date_trunc('month',pva.updated_at) as class_month, 
       sum(total_run_time)/60.0 as total_time, 
       coalesce(sum(case when pva.is_live = 1 then total_run_time else null end),0)/60.0 as live_watch_time_mins, 
       coalesce(sum(case when pva.is_live = 0 then total_run_time else null end),0)/60.0 as rec_watch_time_mins,
       coalesce(sum(case when pva.is_live = 0 and datediff('hour',ul.started_at,pva.updated_at)<=48 then total_run_time else null end),0)/60.0 as recorded_watch_time_bef_48hrs_mins, 
       coalesce(sum(case when pva.is_live = 0 and datediff('hour',ul.started_at,pva.updated_at)>48 then total_run_time else null end),0)/60.0 as recorded_watch_time_aft_48hrs_mins        
from production_video_analytics pva
left join posts_post pp on pva.video_id = pp.uid
left join uplus_liveclass ul on pp.live_class_id = ul.id
left join uplus_programme up on ul.programme_id = up.id
left join uplus_programmeextradetails up2 on up.id = up2.programme_id 
left join topology_topology tt on tt.id = up.topology_id
left join users_userprofile uu ON pp.user_id = uu.user_id
left join auth_user au ON uu.user_id = au.id 
where -- up.starts_at::Date >= '2022-11-01' and 
      -- ul.started_at::Date >= '2022-11-01'and 
      up2.for_subscription = 1 and 
      tt.uid in ('BIZXQ','TEWDQ')
      and pva.total_watch_time  <= 14000
      and up.state in (10,20,30,40)
      and pp.is_deleted = 0 
      and pp.is_active = 1 
      and pp.for_plus = 1 
      and pva.updated_at::date >= '2022-11-01' and pva.updated_at::date < current_date 
group by 1 
order by class_month 
